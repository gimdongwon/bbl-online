# 사용할 Node.js 이미지 지정
# Node.js 22 버전의 Alpine 리눅스 이미지를 사용합니다. Alpine은 가벼워서 좋아요.
FROM node:22-alpine

# 컨테이너 내부의 작업 디렉토리를 /app으로 설정합니다.
# 모든 작업은 이 디렉토리에서 이루어집니다.
WORKDIR /app

# yarn.lock과 package.json 파일을 먼저 복사합니다.
# 이렇게 하면 의존성 파일이 변경되지 않는 한, Docker 빌드 시 이 단계는 캐싱되어 빨라집니다.
COPY package.json ./
COPY yarn.lock ./

# yarn을 사용하여 의존성을 설치합니다.
# npm 대신 yarn을 사용하도록 변경했습니다.
RUN yarn install

# 나머지 모든 소스 코드를 컨테이너의 /app 디렉토리로 복사합니다.
COPY . .

# React 개발 서버가 5002번 포트에서 실행될 것이라고 Docker에게 알려줍니다.
# EXPOSE는 문서화 목적이며, 실제로 포트를 외부에 노출시키지는 않습니다. (이는 docker-compose.yml에서 설정)
EXPOSE 5002

# 컨테이너가 시작될 때 실행할 명령어입니다.
# React 앱의 개발 서버를 시작합니다.
# client/package.json 에 'dev' 스크립트가 'react-scripts start' 등으로 React 개발 서버를 실행하는지 확인해주세요.
CMD ["yarn", "dev"]